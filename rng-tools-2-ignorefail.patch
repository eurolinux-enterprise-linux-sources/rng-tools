diff -Nurp rng-tools-2.orig/rngd.c rng-tools-2/rngd.c
--- rng-tools-2.orig/rngd.c	2011-08-24 17:30:23.641096000 -0400
+++ rng-tools-2/rngd.c	2011-08-24 18:02:48.307818000 -0400
@@ -59,6 +59,8 @@
 /* Background/daemon mode */
 int am_daemon;				/* Nonzero if we went daemon */
 
+int ignorefail; /*Nonzero if we ignore MAX_RNG_FAILURES */
+
 /* Command line arguments and processing */
 const char *argp_program_version = 
 	"rngd " VERSION "\n"
@@ -75,6 +77,8 @@ static char doc[] =
 static struct argp_option options[] = {
 	{ "foreground",	'f', 0, 0, "Do not fork and become a daemon" },
 
+	{ "ignorefail", 'i', 0, 0, "Ignore repeated fips failures" },
+
 	{ "background", 'b', 0, 0, "Become a daemon (default)" },
 
 	{ "random-device", 'o', "file", 0,
@@ -103,6 +107,7 @@ static struct arguments default_argument
 	.random_step	= 64,
 	.fill_watermark	= 2048,
 	.daemon		= 1,
+	.ignorefail		= 0,
 	.enable_tpm	= 1,
 };
 struct arguments *arguments = &default_arguments;
@@ -150,6 +155,9 @@ static error_t parse_opt (int key, char 
 	case 'b':
 		arguments->daemon = 1;
 		break;
+	case 'i':
+		arguments->ignorefail = 1;
+		break;
 	case 's':
 		if (sscanf(arg, "%i", &arguments->random_step) == 0)
 			argp_usage(state);
@@ -232,7 +240,7 @@ static void do_loop(int random_step, dou
 				continue;	/* succeeded, work done */
 
 			iter->failures++;
-			if (iter->failures == MAX_RNG_FAILURES) {
+			if (iter->failures == MAX_RNG_FAILURES && (!ignorefail)) {
 				message(LOG_DAEMON|LOG_ERR,
 					"too many FIPS failures, disabling entropy source\n");
 				iter->disabled = true;
@@ -283,6 +291,9 @@ int main(int argc, char **argv)
 		openlog("rngd", 0, LOG_DAEMON);
 	}
 
+	if (arguments->ignorefail)
+			ignorefail = 1;
+
 	do_loop(arguments->random_step,
 		arguments->poll_timeout ? : -1.0);
 
diff -Nurp rng-tools-2.orig/rngd.h rng-tools-2/rngd.h
--- rng-tools-2.orig/rngd.h	2011-08-24 17:30:23.647090000 -0400
+++ rng-tools-2/rngd.h	2011-08-24 18:03:03.771469000 -0400
@@ -46,6 +46,7 @@ struct arguments {
 	double poll_timeout;
 
 	int daemon;
+	int ignorefail;
 	int enable_tpm;
 };
 extern struct arguments *arguments;
