diff -up ./configure.ac.avail ./configure.ac
--- ./configure.ac.avail	2017-04-25 11:22:40.214677112 -0400
+++ ./configure.ac	2017-04-25 11:22:18.370801964 -0400
@@ -51,6 +51,7 @@ dnl AC_TYPE_PID_T
 dnl -----------------------------
 dnl Checks for required libraries
 dnl -----------------------------
+AC_SEARCH_LIBS(sysfs_get_mnt_path, sysfs, [], [AC_MSG_ERROR([libsysfs is required])],[])
 
 dnl -------------------------------------
 dnl Checks for optional library functions
diff -up ./Makefile.am.avail ./Makefile.am
--- ./Makefile.am.avail	2014-04-01 01:03:31.000000000 -0400
+++ ./Makefile.am	2017-04-25 11:20:17.633492572 -0400
@@ -13,6 +13,7 @@ rngd_SOURCES	= rngd.h rngd.c	rngd_entsou
 		  rngd_linux.h rngd_linux.c util.c 			\
 		  rngd_rdrand.c rdrand_asm.S
 rngd_LDADD	= librngd.a
+rngd_LDFLAGS	= -lsysfs
 
 rngtest_SOURCES	= exits.h stats.h stats.c rngtest.c
 rngtest_LDADD	= librngd.a
diff -up ./rngd_entsource.c.avail ./rngd_entsource.c
--- ./rngd_entsource.c.avail	2014-04-01 01:03:31.000000000 -0400
+++ ./rngd_entsource.c	2017-04-25 11:20:17.634492566 -0400
@@ -36,6 +36,7 @@
 #include <syslog.h>
 #include <string.h>
 #include <stddef.h>
+#include <sysfs/libsysfs.h>
 
 #include "rngd.h"
 #include "fips.h"
@@ -170,15 +171,43 @@ static int discard_initial_data(struct r
 		(tempbuf[2] << 16) | (tempbuf[3] << 24);
 }
 
+#define RNG_AVAIL "/sys/devices/virtual/misc/hw_random/rng_available"
+
 /*
  * Open entropy source, and initialize it
  */
 int init_entropy_source(struct rng *ent_src)
 {
+	struct sysfs_attribute *rngavail;
+
 	ent_src->rng_fd = open(ent_src->rng_name, O_RDONLY);
 	if (ent_src->rng_fd == -1) {
+		message(LOG_ERR|LOG_INFO, "Unable to open file: %s", ent_src->rng_name);
+		return 1;
+	}
+
+	/* RHEL7: since /dev/hwrng will exist now even if there isn't an rng backing it,
+	 * check to see if rng_available is empty, and return error if it is.
+	 */
+	rngavail = sysfs_open_attribute(RNG_AVAIL);
+	if (!rngavail) {
+		message(LOG_ERR|LOG_INFO, "Unable to open sysfs attribute: %s", RNG_AVAIL);
+		return 1;
+	}
+
+	if (sysfs_read_attribute(rngavail)) {
+		message(LOG_ERR|LOG_INFO, "Error reading sysfs attribute: %s", RNG_AVAIL);
+		sysfs_close_attribute(rngavail);
+		return 1;
+	}
+
+	if (strncmp(rngavail->value, "\n", 1) == 0) {
+		message(LOG_ERR|LOG_INFO, "hwrng: no available rng");
+		sysfs_close_attribute(rngavail);
 		return 1;
 	}
+	sysfs_close_attribute(rngavail);
+
 	src_list_add(ent_src);
 	/* Bootstrap FIPS tests */
 	ent_src->fipsctx = malloc(sizeof(fips_ctx_t));
